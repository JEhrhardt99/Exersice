library(tidyverse)
library(estimatr)
library(modelsummary)
library(visdat)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(stringr)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set working directory to script location
setwd("../..") # move up to the project root directory
getwd() # check if wd is the root directory
df <- read.csv2("main/Data_sets/expo-impo-germany.csv")
View(df)
df <- read.csv2("main/Data_sets/expo-impo-germany.csv",
header = TRUE,
sep = ",")
View(df)
df$time
# Erstelle eine neue Variable 'month' in df
df$month <- gsub(".*m(\\d)", "\\1", df$time)
View(df)
# Optional: Konvertiere die Monatsnummer in den Monatsnamen
df$month_name <- month.abb[as.numeric(df$month)]
df$year <- as.numeric(gsub("^(\\d{4}).*", "\\1", df$time))
View(df)
View(df)
View(df)
install.packages("zoo")
library(zoo)
install.packages("zoo")
library(zoo)
df$date <- as.Date(as.yearmon(df$time, format = "%Ym%m"))
View(df)
View(df)
View(df)
ggplot(df, aes(x = date)) +
geom_line(aes(y = exports, color = "Exports"), linewidth = 1.2) +
geom_line(aes(y = imports, color = "Imports"), linewidth = 1.2) +
geom_line(aes(y = p_exports, color = "% Exports"), linewidth = 1.2) +
geom_line(aes(y = p_imports, color = "% Imports"), linewidth = 1.2) +
labs(
title = "Motor Vehicles, Trailers and Semi-Trailers sector",
subtitle = "Wage growth and Value growth over time",
x = "Year",
y = "Growth Rates",
color = "Lines:"
) +
theme_few(base_size = 10) +  # Minimal theme
theme(
plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
legend.position = "top"
)
View(df)
ggplot(df, aes(x = date)) +
geom_line(aes(y = exports, color = "Exports"), linewidth = 1.2) +
geom_line(aes(y = imports, color = "Imports"), linewidth = 1.2) +
labs(
title = "Times Series",
subtitle = "4 Variables",
x = "Date",
y = "Growth Rates",
color = "Lines:"
) +
theme_few(base_size = 10) +  # Minimal theme
theme(
plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
legend.position = "top"
)
ggplot(df, aes(x = date)) +
geom_line(aes(y = exports, color = "Exports"), linewidth = 1.2) +
geom_line(aes(y = imports, color = "Imports"), linewidth = 1.2) +
labs(
title = "Times Series",
subtitle = "of German exports and imports",
x = "Date",
y = "Growth Rates",
color = "Lines:"
) +
theme_few(base_size = 10) +  # Minimal theme
theme(
plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
legend.position = "top"
)
ggplot(df, aes(x = date)) +
geom_line(aes(y = p_exports, color = "% Exports"), linewidth = 1.2) +
geom_line(aes(y = p_imports, color = "% Imports"), linewidth = 1.2) +
labs(
title = "Times Series",
subtitle = "of German exports and imports",
x = "Date",
y = "Growth Rates",
color = "Lines:"
) +
theme_few(base_size = 10) +  # Minimal theme
theme(
plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
legend.position = "top"
)
View(df)
# make p_imports and p_exports as numeric
df$p_imports <- as.numeric(df$p_imports)
df$p_exports <- as.numeric(df$p_exports)
ggplot(df, aes(x = date)) +
geom_line(aes(y = exports, color = "Exports"), linewidth = 1.2) +
geom_line(aes(y = imports, color = "Imports"), linewidth = 1.2) +
labs(
title = "Times Series",
subtitle = "of German exports and imports",
x = "Date",
y = "Growth Rates",
color = "Lines:"
) +
theme_few(base_size = 10) +  # Minimal theme
theme(
plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
legend.position = "top"
)
ggplot(df, aes(x = date)) +
geom_line(aes(y = p_exports, color = "% Exports"), linewidth = 1.2) +
geom_line(aes(y = p_imports, color = "% Imports"), linewidth = 1.2) +
labs(
title = "Times Series",
subtitle = "of German exports and imports",
x = "Date",
y = "Growth Rates",
color = "Lines:"
) +
theme_few(base_size = 10) +  # Minimal theme
theme(
plot.title = element_text(face = "bold", size = 18, hjust = 0.5),
plot.subtitle = element_text(size = 14, hjust = 0.5),
legend.position = "top"
)
